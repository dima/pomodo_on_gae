<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" label="Task"
  xmlns:rcomponents="org.ruboss.components.*">
  <mx:Script><![CDATA[
    import org.ruboss.Ruboss;
    import org.ruboss.utils.RubossUtils;
    import pomodo.models.Task;
    import pomodo.models.Project;
    import pomodo.models.Location;
    import pomodo.models.Account;

    [Bindable]
    private var _task:Task = new Task();

    private function newTask():void {
      _task = new Task();
      tasksList.selectedIndex = -1;
    }

    private function saveTask():void {
      if (_task.id) {
        updateTask();
      } else {
        createTask();
      }
    }
  
    private function createTask():void {
      var task:Task = new Task();
      task.name = nameTextInput.text;
      task.notes = notesTextArea.text;
      task.startTime = startTimeDateTimeTextInput.date;
      task.endTime = endTimeDateTimeTextInput.date;
      task.completed = completedCheckBox.selected;
      task.nextAction = nextActionCheckBox.selected;

      task.project = Project(projectComboBox.selectedItem);
      task.location = Location(locationComboBox.selectedItem);
      task.account = Account(accountComboBox.selectedItem);
      task.create({onSuccess: onTaskCreate});
    }

    private function updateTask():void {
      _task.name = nameTextInput.text;
      _task.notes = notesTextArea.text;
      _task.startTime = startTimeDateTimeTextInput.date;
      _task.endTime = endTimeDateTimeTextInput.date;
      _task.completed = completedCheckBox.selected;
      _task.nextAction = nextActionCheckBox.selected;

      _task.project = Project(projectComboBox.selectedItem);
      _task.location = Location(locationComboBox.selectedItem);
      _task.account = Account(accountComboBox.selectedItem);
      _task.update({onSuccess: onTaskUpdate});
    }

    private function destroyTask():void {
      _task.destroy({onSuccess: onTaskDestroy});
    }
  
    private function onTaskSelect():void {
      _task = RubossUtils.clone(tasksList.selectedItem) as Task;
    }
  
    private function onTaskCreate(task:Task):void {
      _task = new Task;
    }
  
    private function onTaskUpdate(task:Task):void {
      tasksList.selectedItem = task;
      _task = RubossUtils.clone(task) as Task;
    }
  
    private function onTaskDestroy(task:Task):void {
      onTaskCreate(task);
    }

    private function canDeleteTask(task:Task):Boolean {
      return task != null && !RubossUtils.isEmpty(task.id);
    }
  ]]></mx:Script>
  <mx:Panel id="tasksPanel"
    title="Tasks" cornerRadius="0" dropShadowEnabled="false" borderStyle="solid" 
    borderThickness="1" backgroundColor="#EEEEEE" width="25%" height="100%">
    <mx:List id="tasksList"
      width="100%" height="100%"
      dataProvider="{Ruboss.models.index(Task)}"
      change="onTaskSelect()"/>
    <mx:ControlBar width="100%">
      <mx:Button label="New Task" width="100%" height="30"
        click="newTask()"/>
    </mx:ControlBar>
  </mx:Panel>
  <mx:Panel title="Edit Task" cornerRadius="0" dropShadowEnabled="false" borderStyle="solid" 
    borderThickness="1" backgroundColor="#EEEEEE" width="75%" height="100%">
    <mx:Form width="100%" height="100%">
      <mx:FormItem label="Name" width="100%">
        <mx:TextInput id="nameTextInput" width="100%" text="{_task.name}"/>
      </mx:FormItem>
      <mx:FormItem label="Notes" width="100%">
        <mx:TextArea id="notesTextArea" width="100%" height="200" text="{_task.notes}"/>
      </mx:FormItem>
      <mx:FormItem label="StartTime" width="100%">
        <rcomponents:DateTimeTextInput id="startTimeDateTimeTextInput" width="200" date="{_task.startTime}"/>
      </mx:FormItem>
      <mx:FormItem label="EndTime" width="100%">
        <rcomponents:DateTimeTextInput id="endTimeDateTimeTextInput" width="200" date="{_task.endTime}"/>
      </mx:FormItem>
      <mx:FormItem label="Completed" width="100%">
        <mx:CheckBox id="completedCheckBox" selected="{_task.completed}"/>
      </mx:FormItem>
      <mx:FormItem label="NextAction" width="100%">
        <mx:CheckBox id="nextActionCheckBox" selected="{_task.nextAction}"/>
      </mx:FormItem>
      <mx:FormItem label="Project" width="100%">
        <mx:ComboBox id="projectComboBox" width="200"
          labelField="{Project.LABEL}"
          dataProvider="{Ruboss.models.index(Project)}" prompt="Project ..."
          selectedItem="{_task.project}" />
      </mx:FormItem>
      <mx:FormItem label="Location" width="100%">
        <mx:ComboBox id="locationComboBox" width="200"
          labelField="{Location.LABEL}"
          dataProvider="{Ruboss.models.index(Location)}" prompt="Location ..."
          selectedItem="{_task.location}" />
      </mx:FormItem>
      <mx:FormItem label="Account" width="100%">
        <mx:ComboBox id="accountComboBox" width="200"
          labelField="{Account.LABEL}"
          dataProvider="{Ruboss.models.index(Account)}" prompt="Account ..."
          selectedItem="{_task.account}" />
      </mx:FormItem>
    </mx:Form>
    <mx:ControlBar width="100%">
      <mx:Button label="Save Task" width="50%" height="30"
        click="saveTask()"/>
      <mx:Button label="Delete Task" width="50%" height="30"
        enabled="{canDeleteTask(_task)}"
        click="destroyTask()"/>
    </mx:ControlBar>
  </mx:Panel>
</mx:HBox>